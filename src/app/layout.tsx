import QueryProvider from "@/app/query-provider";
import SuccessSnackbar from "@/components/snackbar/success/snackbar";
import theme from "@/theme";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import Box from "@mui/material/Box";
import CssBaseline from "@mui/material/CssBaseline";
import { ThemeProvider } from "@mui/material/styles";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import type { ReactNode } from "react";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

// biome-ignore lint/nursery/useComponentExportOnlyModules: <explanation>
export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

type Props = Readonly<{
	appbar: ReactNode;
	children: ReactNode;
	drawer: ReactNode;
}>;

const sx = { pt: 8 };

export default function Layout({ appbar, children, drawer }: Props) {
	return (
		<html lang="en">
			<body className={`${geistSans.variable} ${geistMono.variable}`}>
				<AppRouterCacheProvider>
					<ThemeProvider theme={theme}>
						<QueryProvider>
							<CssBaseline enableColorScheme />
							<SuccessSnackbar />
							{appbar}
							{drawer}
							<Box component="main" sx={sx}>
								{children}
							</Box>
						</QueryProvider>
					</ThemeProvider>
				</AppRouterCacheProvider>
			</body>
		</html>
	);
}
